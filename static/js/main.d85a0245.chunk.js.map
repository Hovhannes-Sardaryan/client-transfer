{"version":3,"sources":["common/images/rf.png","common/Styles.js","common/Loading.js","Store.js","components/dashBoard/DashBoard.js","components/navBar/NavBar.js","components/signIn_Up/SignIn.js","components/signIn_Up/SignUp.js","components/error/Error.js","components/dashBoard/EditUser.js","components/dashBoard/AddClient.js","App.js","index.js"],"names":["module","exports","IconsStyle","float","deleteIcon","color","cursor","checkbox","marginRight","backgroundColor","styleInRegister","form_in","maxWidth","margin","display","gridColumn","gridRow","gridGap","form_up","iconTag","justifyItems","iconText","fontSize","fontFamily","fontWeight","lineHeight","iconDiv","padding","borderRadius","width","textAlign","marginBottom","Loading","className","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","store","compose","reactReduxFirebase","userProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestoreReducer","window","__REDUX_DEVTOOLS_EXTENSION__","firestoreConnect","collection","connect","state","clients","data","Clients","props","cL","index","user","push","userId","Table","striped","bordered","hover","variant","style","map","item","key","name","lastName","transfer","contact","to","textDecoration","onClick","e","id","doc","delete","NavBar","Navbar","bg","src","rf","alt","Nav","this","logged","Button","logg","Component","SignIn","showPassword","notFound","remember","setState","initialValues","email","password","onSubmit","values","i","users","validationSchema","Yup","shape","required","min","matches","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","Form","htmlFor","FormLabel","FormControl","type","placeholder","value","onChange","onBlur","position","InputGroup","Prepend","checked","size","block","disabled","Users","SignUp","showPass","showConfirm","confirm","agree","set","then","label","test","dirty","bind","isValid","ordered","Error","EditUser","edit","usr","target","update","match","params","Card","Header","Body","history","showEditInputs","saveChanges","Footer","Date","getFullYear","AddClient","addUser","Row","OverlayTrigger","overlay","Tooltip","App","loggedIn","logOrNot","path","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d85a0245.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rf.4175693d.png\";","export const IconsStyle = {\r\n  float: \"right\",\r\n  deleteIcon: {\r\n    color: \"red\",\r\n    cursor: \"pointer\",\r\n    float: \"right\",\r\n  },\r\n  checkbox: {\r\n    marginRight: \"5px\",\r\n    backgroundColor: \"EEE\",\r\n    float: \"right\",\r\n  }\r\n}\r\n\r\nexport const styleInRegister = {\r\n  form_in: {\r\n    maxWidth: '450px',\r\n    margin: '0 auto',\r\n    display: 'grid',\r\n    gridColumn: '1fr 1fr',\r\n    gridRow: \"auto\",\r\n    gridGap: '8px',\r\n  },\r\n  form_up: {\r\n    maxWidth: '450px',\r\n    margin: '50px auto',\r\n    display: 'grid',\r\n    gridColumn: '1fr 1fr',\r\n    gridRow: \"auto\",\r\n    gridGap: '8px',\r\n  },\r\n  iconTag: {\r\n    gridColumn: \"1/ span 2\",\r\n    gridRow: '1',\r\n    display: \"inline-grid\",\r\n    justifyItems: \"center\",\r\n    iconText: {\r\n      fontSize: \"1.5rem\",\r\n      fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\r\n      fontWeight: \"400\",\r\n      lineHeight: \"1.334\",\r\n    },\r\n    iconDiv: {\r\n      padding: \"5px\",\r\n      backgroundColor: \"rgb(220, 0, 78)\",\r\n      borderRadius: \"50%\",\r\n      width: \"36px\",\r\n      textAlign: \"center\",\r\n      marginBottom: \"10px\"\r\n    }\r\n  }\r\n}","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport './loading.css';\r\n\r\nconst Loading = () => {\r\n  return <div className=\"loadingStyle\" >\r\n    <div className=\"lds-spinner\" ><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div >\r\n  </div>\r\n}\r\n\r\n\r\n// Loading.propTypes = {\r\n//   margin: PropTypes.string\r\n// }\r\n\r\n\r\nexport default Loading","import { createStore, combineReducers, compose } from 'redux';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\r\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCMN2uZUj8qiswHN22AorDJvhLHvGwhXC8\",\r\n  authDomain: \"transfer-project-319a8.firebaseapp.com\",\r\n  databaseURL: \"https://transfer-project-319a8.firebaseio.com\",\r\n  projectId: \"transfer-project-319a8\",\r\n  storageBucket: \"transfer-project-319a8.appspot.com\",\r\n  messagingSenderId: \"586459832956\",\r\n  appId: \"1:586459832956:web:98c403bd456e3d10281ff9\"\r\n};\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'Clients',\r\n};\r\n// Init firebase instance\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Init firestore\r\nexport const firestore = firebase.firestore()\r\n\r\n// Add reactReduxFirebase enhancer when making store creator\r\nconst createStoreWithFirebase = compose(\r\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\r\n  reduxFirestore(firebase)\r\n)(createStore);\r\n\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n});\r\n\r\n// Create initial state\r\nconst initialState = {};\r\n\r\n// Create store\r\nexport const store = createStoreWithFirebase(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    reactReduxFirebase(firebase),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\n\r\n","import React from 'react'\r\nimport { Table } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport \"./Dashboard.css\"\r\nimport { IconsStyle } from '../../common/Styles'\r\nimport Loading from '../../common/Loading'\r\nimport { firestore } from '../../Store'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction DashBoard(props) {\r\n  let cL = []\r\n  let index = 0\r\n\r\n  for (let user in props.clients) {\r\n    cL.push({ userId: user, ...props.clients[user] })\r\n  }\r\n  const deleteUser = (id) => {\r\n    firestore.collection(\"Clients\").doc(`${id}`).delete()\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboardStyle\">\r\n      <div>\r\n        <h1>DashBoard</h1>\r\n      </div>\r\n      {!props.clients ? <Loading /> : <Table striped bordered hover variant=\"dark\">\r\n        <thead>\r\n          <tr style={{ padding: \"30px\" }}>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Sure Name</th>\r\n            <th>Transfer ( <i className=\"fas fa-dollar-sign\"></i> )</th>\r\n            <th>Contact</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {cL.map(item => {\r\n            index++\r\n            return (\r\n              <tr className=\"\" key={index}>\r\n                <td>{index}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.lastName}</td>\r\n                <td>$ {item.transfer} </td>\r\n                <td>{item.contact}\r\n                  <div className='dashboard-icon-items'>\r\n                    <Link to={`/dashboard/${item.userId}`} style={{ textDecoration: \"none\" }}>\r\n                      <i className=\"fas fa-pencil-alt editIcon\"></i>\r\n                    </Link>\r\n                    <div onClick={(e) => deleteUser(item.userId, e)} >\r\n                      <i className=\"fas fa-trash-alt\" style={IconsStyle.deleteIcon} ></i>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: 'Clients' }]),\r\n  connect((state) => ({\r\n    clients: state.firestore.data.Clients\r\n  }))\r\n)(DashBoard);\r\n","import React, { Component } from 'react'\r\nimport { Navbar, Nav, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport rf from '../../common/images/rf.png'\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand nav-link\" to=\"/\">\r\n            <img className=\"brandLogo\" src={rf} alt=\"To dashboard\" />\r\n          </Link>\r\n          <Nav className=\"mr-auto\">\r\n            {this.props.logged && <Link to=\"/\" className=\"nav-link\">DashBoard</Link>}\r\n            {this.props.logged && <Link to=\"/add-client\" className=\"nav-link\">Add Client</Link>}\r\n            {!this.props.logged && <Link to=\"/signin\" className=\"nav-link right\">Sign In</Link>}\r\n          </Nav>\r\n          {this.props.logged && <Button variant=\"outline-info\" className=\"mr-2\"\r\n            onClick={() => this.props.logg()}> Log out\r\n        </Button>}\r\n        </div>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport './Registr.css'\r\nimport { styleInRegister as style } from '../../common/Styles'\r\nimport { FormControl, FormLabel, Form, InputGroup, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    showPassword: false,\r\n    notFound: false,\r\n    remember: false,\r\n  }\r\n\r\n  showPassword() { this.setState({ showPassword: !this.state.showPassword }) }\r\n  remember() { this.setState({ remember: !this.state.remember }) }\r\n\r\n  render() {\r\n    const { showPassword, notFound, remember } = this.state\r\n    return <div className='container registr-inputs'>\r\n\r\n      <div style={style.iconTag}>\r\n        <div style={style.iconTag.iconDiv}><i className=\"fas fa-lock\" style={{ color: \"white\" }}></i></div>\r\n        <p style={style.iconTag.iconText}>Sign in</p>\r\n      </div>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\", showPassword: false }}\r\n        onSubmit={values => {\r\n          for (let i in this.props.users) {\r\n            if (i === values.password && this.props.users[i].email === values.email) {\r\n              this.props.logg()\r\n            } else { this.setState({ notFound: true, remember: false }) }\r\n          }\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string().email().required(\"Required\"),\r\n          password: Yup.string()\r\n            .required(\"No password provided.\")\r\n            .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n            .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n        })}  >\r\n        {props => {\r\n          const { values, touched, errors, isSubmitting, handleChange, handleBlur, handleSubmit } = props;\r\n\r\n          return (\r\n            <Form style={style.form_in} onSubmit={handleSubmit} htmlFor=\"email\" >\r\n\r\n              <FormLabel style={{ gridColumn: '1/3', gridRow: '3' }} >\r\n                <FormControl\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter your email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={`myFormControl ${errors.email && touched.email && \"error\"}`}\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </FormLabel>\r\n              <FormLabel htmlFor=\"email\" style={{ gridColumn: '1/3', gridRow: '4', position: \"relative\" }}>\r\n                <FormControl name=\"password\" type={!showPassword ? \"password\" : \"text\"}\r\n                  placeholder=\"Enter your password\" value={values.password}\r\n                  onChange={handleChange} onBlur={handleBlur}\r\n                  className={`myFormControl ${errors.password && touched.password && \"error\"}`}\r\n                />\r\n                <i className={`fas ${showPassword ? \"fa-eye-slash\" : \"fa-eye\"} right eyeIconStile`}\r\n                  onClick={() => this.showPassword()}>  </i>\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>)}\r\n                {notFound && <div className=\"input-feedback\">You have wrote wrong email or password,\r\n                or haven't registered yet! Please try again or<Link to='/signup'> Sign Up.</Link></div>}\r\n              </FormLabel>\r\n\r\n              <InputGroup.Prepend style={{ gridColumn: '1/3', gridRow: '5' }} >\r\n                <label className=\"RegisterCheckStyle\">\r\n                  <input type=\"checkbox\" checked={remember} onChange={() => this.remember()} />Remember me</label>\r\n              </InputGroup.Prepend>\r\n              <Button type=\"submit\" variant=\"primary\" size=\"lg\" block disabled={isSubmitting}\r\n                style={{ gridColumn: \"1/3\", gridRow: \"6\", margin: \"8px auto\" }} >\r\n                Sign in\r\n              </Button>\r\n\r\n              <div style={{ gridColumn: \"1/3\", gridRow: \"7\", }} >\r\n                <p className=\"linkP\" >Forgote password? </p>\r\n                <Link to='/signup'> Don't have an account? Sign Up </Link>\r\n              </div>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: 'Users' }]),\r\n  connect((state) => ({ users: state.firestore.data.Users }))\r\n)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport { Form, FormLabel, FormControl, InputGroup, Button } from 'react-bootstrap'\r\nimport { styleInRegister as style } from '../../common/Styles'\r\nimport { Link, } from 'react-router-dom'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport { firestore } from '../../Store'\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nclass SignUp extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      showPass: false,\r\n      showConfirm: false,\r\n    }\r\n  }\r\n\r\n  showPassword() { this.setState({ showPass: !this.state.showPass }) }\r\n  showConfirm() { this.setState({ showConfirm: !this.state.showConfirm }) }\r\n\r\n  render() {\r\n    const { showPass, showConfirm } = this.state\r\n    return <Formik\r\n      initialValues={{ name: \"\", lastName: \"\", email: \"\", password: \"\", confirm: \"\", agree: false }}\r\n      onSubmit={values => {\r\n        const { name, lastName, email, password } = values\r\n        firestore.collection(\"Users\").doc().set({\r\n          name, lastName, email, password\r\n        })\r\n          .then(() => { this.props.logg() })\r\n      }}\r\n      //********Using Yup for validation********/\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required(\"Name is required\")\r\n          .min(2, \"Too short - should be 2 chars minimum.\"),\r\n        lastName: Yup.string()\r\n          .required(\"Surename is required\")\r\n          .min(2, \"Too short - should be 2 chars minimum.\"),\r\n        email: Yup.string()\r\n          .email()\r\n          .required(\"Required\"),\r\n        password: Yup.string()\r\n          .required(\"No password provided.\")\r\n          .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n          .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\r\n        confirm: Yup.string()\r\n          .required(\"Confirm requred\").label(\"Confirm requred\"),\r\n        agree: Yup.boolean()\r\n          .test(\"is-true\", \"Should agree to terms.\", value => value === true)\r\n      })}\r\n    >\r\n      {props => {\r\n        const { values, touched, errors, isSubmitting, handleChange, handleBlur, handleSubmit, dirty } = props;\r\n        return (\r\n          <Form onSubmit={handleSubmit} style={style.form_up}>\r\n\r\n            <div style={style.iconTag}>\r\n              <div style={style.iconTag.iconDiv}><i className=\"fas fa-lock\" style={{ color: \"white\" }}></i></div>\r\n              <p style={style.iconTag.iconText}>Registration</p>\r\n            </div>\r\n            <FormLabel htmlFor=\"email\" style={{ gridColumn: '1/2', gridRow: '2' }} >\r\n              <FormControl type=\"text\" name=\"name\" value={values.name} onChange={handleChange}\r\n                onBlur={handleBlur} placeholder='name'\r\n                className={`myFormControl ${errors.name && touched.name && \"error\"}`} />\r\n              {errors.name && touched.name && (\r\n                <div className=\"input-feedback\">{errors.name}</div>\r\n              )}\r\n            </FormLabel>\r\n            <FormLabel htmlFor=\"email\" style={{ gridColumn: '2/3', gridRow: '2' }} >\r\n              <FormControl type=\"text\" name=\"lastName\" value={values.lastName} onChange={handleChange}\r\n                onBlur={handleBlur} placeholder='surname'\r\n                className={`myFormControl ${errors.lastName && touched.lastName && \"error\"}`} />\r\n              {errors.lastName && touched.lastName && (\r\n                <div className=\"input-feedback\">{errors.lastName}</div>\r\n              )}\r\n            </FormLabel>\r\n            <FormLabel style={{ gridColumn: '1/3', gridRow: '3' }} >\r\n              <FormControl type=\"email\" name=\"email\" value={values.email} onChange={handleChange}\r\n                onBlur={handleBlur} placeholder='Email'\r\n                className={`myFormControl ${errors.email && touched.email && \"error\"}`} />\r\n              {errors.email && touched.email && (\r\n                <div className=\"input-feedback\">{errors.email}</div>\r\n              )}\r\n            </FormLabel>\r\n            <FormLabel htmlFor=\"email\" style={{ gridColumn: '1/3', gridRow: '4', position: \"relative\" }} >\r\n              <FormControl type={!showPass ? \"password\" : \"text\"} value={values.password} name=\"password\"\r\n                onChange={handleChange} placeholder='password' onBlur={handleBlur}\r\n                className={`myFormControl ${errors.password && touched.password && \"error\"}`} />\r\n              <i className={`fas ${showPass ? \"fa-eye-slash\" : \"fa-eye right\"}  eyeIconStile`}\r\n                onClick={this.showPassword.bind(this)}>  </i>\r\n              {errors.password && touched.password && (\r\n                <div className=\"input-feedback\">{errors.password}</div>\r\n              )}\r\n            </FormLabel>\r\n            <FormLabel htmlFor=\"email\" style={{ gridColumn: '1/3', gridRow: '5', position: \"relative\" }} >\r\n              <FormControl type={!showConfirm ? \"password\" : \"text\"} value={values.confirm} name=\"confirm\"\r\n                onChange={handleChange} onBlur={handleBlur} placeholder='confirm password'\r\n                className={`myFormControl ${errors.confirm && touched.confirm && \"error\"}`} />\r\n              <i className={`fas ${showConfirm ? \"fa-eye-slash\" : \"fa-eye right\"}  eyeIconStile`}\r\n                onClick={this.showConfirm.bind(this)}>  </i>\r\n              {errors.confirm && touched.confirm && (\r\n                <div className=\"input-feedback\">{errors.confirm}</div>\r\n              )}\r\n              {values.confirm && values.password !== values.confirm && <div className=\"input-feedback\">\"Write correct password\"</div>}\r\n            </FormLabel>\r\n\r\n            <InputGroup.Prepend style={{ gridColumn: '1/3', gridRow: '6' }} >\r\n              <label className=\"RegisterCheckStyle\">\r\n                <input type=\"checkbox\" name=\"agree\" checked={values.agree} onChange={handleChange} onBlur={handleBlur} />\r\n                I agree to the rules of use.\r\n              </label>\r\n              {errors.agree && isSubmitting && dirty && (\r\n                <div className=\"input-feedback\">{errors.agree}</div>\r\n              )}\r\n            </InputGroup.Prepend>\r\n            <Button type=\"submit\" variant=\"primary\" size=\"lg\" block\r\n              disabled={!props.isValid || values.password !== values.confirm || isSubmitting}\r\n              onSubmit={handleSubmit}\r\n              style={{ gridColumn: \"1/3\", gridRow: \"7\", margin: \"8px auto\" }}>\r\n              Sign Up\r\n            </Button>\r\n            <div style={{ gridColumn: \"1/3\", gridRow: \"8\", textAlign: \"end\", }} >\r\n              <Link to='/signin'>Already have an account? Sign in </Link>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: 'Users' }]),\r\n  connect((state) => {\r\n    return { users: state.firestore.ordered.Users }\r\n  })\r\n)(SignUp);\r\n","import React from 'react'\r\n// import './Error1.css'\r\nimport './Error2.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Error() {\r\n  return (\r\n\r\n    // example 1\r\n\r\n    // <div id=\"notfound\">\r\n    //   <div className=\"notfound\">\r\n    //     <div className=\"notfound-404\">\r\n    //       <h1>404</h1>\r\n    //       <h2>Page not found</h2>\r\n    //     </div>\r\n    //     <Link to=\"/\">Go To Homepage</Link>\r\n    //   </div>\r\n    // </div>\r\n\r\n    // example 2\r\n\r\n    <div id=\"notfound\">\r\n      <div className=\"notfound\">\r\n        <div className=\"notfound-404\">\r\n          <h1>Oops!</h1>\r\n        </div>\r\n        <h2>404 - Page not found</h2>\r\n        <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\r\n        <Link to=\"/\">Go To Homepage</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux';\r\nimport './Dashboard.css'\r\nimport { Card, Button, Table } from 'react-bootstrap';\r\nimport { firestore } from '../../Store';\r\n\r\n\r\nclass EditUser extends Component {\r\n  state = {\r\n    name: \"\",\r\n    lastName: '',\r\n    transfer: '',\r\n    contact: \"\",\r\n    edit: true,\r\n    usr: {}\r\n  }\r\n\r\n  handleChange = (e) => { this.setState({ [e.target.name]: e.target.value }) }\r\n  showEditInputs(usr) { this.setState({ edit: !this.state.edit, usr: usr }) }\r\n  saveChanges(id) {\r\n    const { name, lastName, transfer, usr, contact } = this.state\r\n    firestore.collection(\"Clients\").doc(id).update({\r\n      name: name ? name : usr.name,\r\n      lastName: lastName ? lastName : usr.lastName,\r\n      transfer: transfer ? transfer : usr.transfer,\r\n      contact: contact ? contact : usr.contact,\r\n    });\r\n    this.setState({ edit: false })\r\n  }\r\n\r\n  render() {\r\n    let usr = {}\r\n    for (let i in this.props.clients) {\r\n      if (i === this.props.match.params.userId) {\r\n        usr = { id: i, ...this.props.clients[i] }\r\n      }\r\n    }\r\n    let { edit, name, lastName, transfer, contact } = this.state\r\n    return (\r\n      <div className=\"container pct\">\r\n        <Card className=\"text-center \" variant='primary'>\r\n          <Card.Header variant=\"sucsess\"> <h2>You can edit and save changes</h2> </Card.Header>\r\n          <Table >\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"infoA\"><strong>Name</strong></td>\r\n                <td className=\"infoB\">{!edit ? usr.name : <input className=\"editInput\" name=\"name\"\r\n                  value={name} onChange={this.handleChange} placeholder={usr.name}\r\n                />}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"infoA\"><strong>Sure Name</strong></td>\r\n                <td className=\"infoB\">{!edit ? usr.lastName : <input className=\"editInput\" name=\"lastName\"\r\n                  value={lastName} onChange={this.handleChange} placeholder={usr.lastName}\r\n                />}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"infoA\"><strong>Transfer</strong></td>\r\n                <td className=\"infoB\">{!edit ? usr.transfer : <input className=\"editInput\" name=\"transfer\"\r\n                  value={transfer} onChange={this.handleChange} placeholder={usr.transfer}\r\n                />}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"infoA\"><strong>Contact</strong></td>\r\n                <td className=\"infoB\">{!edit ? usr.contact : <input className=\"editInput\" name=\"contact\"\r\n                  value={contact} onChange={this.handleChange} placeholder={usr.contact}\r\n                />}</td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n          <Card.Body>\r\n            <Button variant=\"outline-primary\" onClick={() => this.props.history.push('/')}>Go Back</Button>\r\n            <Button variant=\"outline-primary\" style={{ margin: \"0 20px\" }} onClick={() => this.showEditInputs(usr)}>\r\n              {!edit ? \"Edit Data\" : \"Cancel \"}</Button>\r\n            <Button variant=\"outline-success\" onClick={() => this.saveChanges(usr.id)} disabled={!edit}>Save Changes</Button>\r\n          </Card.Body>\r\n          <Card.Footer className=\"text-muted\">{new Date().getFullYear()}</Card.Footer>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: 'Clients' }]),\r\n  connect((state) => ({ clients: state.firestore.data.Clients }))\r\n)(EditUser);\r\n","import React, { Component } from 'react'\r\nimport { FormControl, Tooltip, Button, OverlayTrigger, FormLabel, Form } from 'react-bootstrap'\r\nimport { compose } from 'redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { firestore } from '../../Store'\r\n\r\nclass AddClient extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: \"\",\r\n      lastName: \"\",\r\n      transfer: \"\",\r\n      contact: ''\r\n    }\r\n  }\r\n\r\n  addUser() {\r\n    const { name, lastName, transfer, contact } = this.state\r\n    firestore.collection(\"Clients\").doc().set({\r\n      name, lastName, contact,\r\n      transfer: transfer ? transfer : 0,\r\n    }).then(() => { })\r\n    this.setState({ name: \"\", lastName: \"\", transfer: \"\", contact: '' })\r\n  }\r\n  handleChange = (e) => { this.setState({ [e.target.name]: e.target.value }) }\r\n\r\n  render() {\r\n    const { name, transfer, lastName, contact } = this.state\r\n    return (\r\n      <div className=\"container pct\">\r\n        <Form onSubmit={this.addUser.bind(this)} className=\"addClientForm\" >\r\n\r\n          <div className=\"addClientTitle\">Please write all options for grammarly adding Client data</div>\r\n          <Form.Row>\r\n            <FormLabel className=\"addClientLabel\">Name</FormLabel> <span style={{ color: \"red\" }}>*</span>\r\n            <FormControl name=\"name\" value={name} onChange={this.handleChange} placeholder=\"name\" />\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <FormLabel className=\"addClientLabel\">Surname</FormLabel> <span style={{ color: \"red\" }}>*</span>\r\n            <FormControl name=\"lastName\" value={lastName} onChange={this.handleChange} placeholder=\"surname\" />\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <FormLabel className=\"addClientLabel\">Transfer</FormLabel>\r\n            <FormControl name=\"transfer\" value={transfer} onChange={this.handleChange} placeholder=\"transfer\" />\r\n          </Form.Row>\r\n          <Form.Row style={{ marginBottom: \"20px\" }}>\r\n            <FormLabel className=\"addClientLabel\">Contact</FormLabel> <span style={{ color: \"red\" }}>*</span>\r\n            <FormControl name=\"contact\" value={contact} onChange={this.handleChange} placeholder=\"enter contact\" />\r\n          </Form.Row>\r\n          {name && contact && lastName ?\r\n            <Link to=\"/\" className=\"addClientLink\" onClick={(e) => this.addUser(e)}> Add Client</Link>\r\n            :\r\n            <OverlayTrigger\r\n              overlay={<Tooltip id=\"tooltip-disabled\">Write required options for add client!</Tooltip>}>\r\n              <span >\r\n                <Button variant=\"outline-secondary\" disabled style={{ width: \"100%\" }}> Add Client </Button>\r\n              </span>\r\n            </OverlayTrigger >}\r\n        </Form>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: 'Clients' }]),\r\n  connect((state) => ({\r\n    clients: state.firestore.data.Clients\r\n  }))\r\n)(AddClient);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { connect } from 'react-redux'\n\nimport DashBoard from './components/dashBoard/DashBoard';\nimport NavBar from './components/navBar/NavBar';\nimport SignIn from './components/signIn_Up/SignIn';\nimport SignUp from './components/signIn_Up/SignUp';\nimport Error from './components/error/Error';\nimport EditUser from './components/dashBoard/EditUser';\nimport AddClient from './components/dashBoard/AddClient';\n\nclass App extends Component {\n\n  state = {\n    loggedIn: false\n  }\n\n  logOrNot() { this.setState({ loggedIn: !this.state.loggedIn }) }\n\n  render() {\n    const { loggedIn } = this.state\n    return (\n      <div className='App imApp'>\n        <BrowserRouter >\n          <NavBar logg={this.logOrNot.bind(this)} logged={loggedIn} />\n          <Switch>\n\n            <Route path=\"/signin\" exact render={() => !loggedIn ? <SignIn logg={this.logOrNot.bind(this)} /> :\n              <Redirect to=\"/\" />} />\n\n            <Route path=\"/\" exact render={() => loggedIn ? <DashBoard /> : <Redirect to='/signin' />} />\n            <Route path=\"/dashboard/:userId\" component={EditUser} exact />\n\n            <Route path=\"/signup\" exact render={() => !loggedIn ? <SignUp logg={() => this.logOrNot()} /> :\n              <Redirect to=\"/add-client\" />} />\n            <Route path=\"/add-client\" render={() => loggedIn && <AddClient />} exact />\n\n            <Route component={Error} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\nexport default compose(\n  firestoreConnect([{ collection: 'Clients' }]),\n  connect((state) => {\n    return { clients: state.firestore.ordered.Clients }\n  })\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './common/fontAwesome/css/all.min.css'\n\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Store';\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n\n\n\n/*\nexport default compose(\n  firestoreConnect([{ collection: 'Clients' }]),\n  connect((state) => {\n    return { clients: state.firestore.ordered.Clients }\n  })\n)(Home);    */"],"sourceRoot":""}